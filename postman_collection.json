{
	"info": {
		"_postman_id": "a036ae3a-1703-4172-b945-8b3ad13348a4",
		"name": "B5A7 Backend – Auth & Posts",
		"description": "Postman tests for the B5A7 Express + Prisma backend (single DATABASE_URL mode).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45833979"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "server-status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status 200', () => pm.response.code === 200);",
									"pm.test('ok true', () => pm.response.json().ok === true);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('201 Created', () => pm.response.code === 201);",
									"const json = pm.response.json();",
									"pm.environment.set('accessToken', json.access || '');",
									"pm.environment.set('refreshToken', json.refresh || '');",
									"pm.test('tokens present', () => !!json.access && !!json.refresh);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPass}}\",\n  \"name\": \"Admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('200 OK', () => pm.response.code === 200);",
									"const json = pm.response.json();",
									"pm.environment.set('accessToken', json.access || '');",
									"pm.environment.set('refreshToken', json.refresh || '');",
									"pm.test('tokens present', () => !!json.access && !!json.refresh);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPass}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login – Wrong Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('401 Unauthorized', () => pm.response.code === 401);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"wrongpass\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('200 OK', () => pm.response.code === 200);",
									"const json = pm.response.json();",
									"pm.environment.set('accessToken', json.access || pm.environment.get('accessToken'));",
									"pm.test('got new access', () => !!json.access);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh – Missing/Bad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('401 Unauthorized', () => [400,401].includes(pm.response.code));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh\": \"badtoken\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "all-post – Public",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('200 OK', () => pm.response.code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-post - Unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('401 Unauthorized', () => pm.response.code === 401);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"First Post\",\n  \"content\": \"Hello\",\n  \"published\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-post - Authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('201 Created', () => pm.response.code === 201);",
									"const json = pm.response.json();",
									"pm.environment.set('postId', json.id || '');",
									"pm.test('post id saved', () => !!pm.environment.get('postId'));"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Second One\",\n  \"content\": \"Hahaha\",\n  \"published\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "single-post - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('200 OK', () => pm.response.code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Title\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/posts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "single-post -  Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('404 Not Found', () => pm.response.code === 404);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Should Fail\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/posts/does-not-exist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"does-not-exist"
							]
						}
					},
					"response": []
				},
				{
					"name": "single-post - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('204 No Content', () => pm.response.code === 204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/posts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "single-post - Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('404 Not Found', () => pm.response.code === 404);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/posts/does-not-exist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"does-not-exist"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "all-project - Public",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('200 OK', () => pm.response.code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-project - Unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('401 Unauthorized', () => pm.response.code === 401);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"My Portfolio\",\n  \"description\": \"Personal portfolio.\",\n  \"thumbnailUrl\": \"https://via.placeholder.com/640x360.png?text=Thumbnail\",\n  \"repoUrl\": \"https://github.com/you/b5a7-portfolio\",\n  \"liveUrl\": \"https://your-site.example.com\",\n  \"features\": [\"Next.js ISR\",\"JWT Auth\",\"Tailwind\",\"Prisma + Neon\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-project - Authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('201 Created', () => pm.response.code === 201);",
									"const json = pm.response.json();",
									"pm.environment.set('projectId', json.id || '');",
									"pm.test('project id saved', () => !!pm.environment.get('projectId'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"My Portfolio\",\n  \"description\": \"Personal portfolio.\",\n  \"thumbnailUrl\": \"https://via.placeholder.com/640x360.png?text=Thumbnail\",\n  \"repoUrl\": \"https://github.com/you/b5a7-portfolio\",\n  \"liveUrl\": \"https://your-site.example.com\",\n  \"features\": [\"Next.js ISR\",\"JWT Auth\",\"Tailwind\",\"Prisma + Neon\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "single-project - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('200 OK', () => pm.response.code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"My Portfolio (Updated)\",\n  \"features\": [\"Next.js ISR\",\"JWT Auth\",\"Tailwind\",\"Prisma + Neon\",\"Cards\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/projects/{{projectId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "single-project - Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('404 Not Found', () => pm.response.code === 404);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Should Fail\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/projects/does-not-exist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects",
								"does-not-exist"
							]
						}
					},
					"response": []
				},
				{
					"name": "single-post - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('204 No Content', () => pm.response.code === 204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/projects/{{projectId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "single-post - Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('404 Not Found', () => pm.response.code === 404);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/projects/does-not-exist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects",
								"does-not-exist"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					"// Global pre-request hook (optional)."
				],
				"type": "text/javascript"
			}
		}
	]
}